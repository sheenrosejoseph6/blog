// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

// Block Grid Mixins
//

// Create a custom block grid
//
// $per-row - # of items to display per row. Default: false.
// $spacing - # of ems to use as padding on each block item. Default: 1.25em.
// $base-style - Apply a base style to block grid. Default: true.


@if $align-block-grid-to-grid {
  $block-grid-default-spacing: $grid-gutter-width;
}

@mixin block-grid(
  $per-row:false,
  $spacing:$block-grid-default-spacing,
  $include-spacing:true,
  $base-style:true) {

  @if $base-style {
    display: block;
    padding: 0;
    @if $align-block-grid-to-grid {
      margin: 0;
    } @else {
      @include rem-fallback(margin, 0, (-$spacing/2));
    }
    @include clearfix;

    &>li {
      display: block;
      height: auto;
      float: left;
      @if $include-spacing {
        @include rem-fallback(padding, 0, ($spacing/2), $spacing);
      }
    }
  }

  @if $per-row {
    &>li {
      width: 100%/$per-row;
      @if $include-spacing {
        @include rem-fallback(padding, 0, ($spacing/2), $spacing);
      }
      list-style: none;

      &:nth-of-type(1n) { clear: none; }
      &:nth-of-type(#{$per-row}n+1) { clear: both; }
      @if $align-block-grid-to-grid {
        @include block-grid-aligned($per-row, $spacing);
      }
    }
  }
}

@mixin block-grid-aligned($per-row, $spacing) {
  @for $i from 1 through $block-grid-elements {
    @if $per-row >= $i {
      $grid-column: '+' + $i;
      @if $per-row == $i {
        $grid-column: '';
      }
      &:nth-of-type(#{$per-row}n#{unquote($grid-column)}) {
        @include rem-fallback(padding-left, ($spacing - (($spacing / $per-row) * ($per-row - ($i - 1)))));
        @include rem-fallback(padding-right, ($spacing - (($spacing / $per-row) * $i)));
      }
    }
  }
}

// Generate presentational markup for block grid.
//
// $size - Name of class to use, i.e. "lg" will generate .lg-block-grid-1, .lg-block-grid-2, etc.
@mixin block-grid-html-classes($size, $include-spacing) {
  @for $i from 1 through $block-grid-elements {
    .#{$size}-block-grid-#{($i)} {
      @include block-grid($i,$block-grid-default-spacing,$include-spacing,false);
    }
  }
}
